version: '3.8'

# Gemeinsame Umgebungsvariablen für alle Huly-Services
x-common-env: &common-env
  SERVER_SECRET: ${HULY_SECRET}
  SECRET: ${HULY_SECRET}
  STORAGE_CONFIG: minio|minio?accessKey=minioadmin&secretKey=minioadmin
  MONGO_URL: mongodb://mongodb:27017
  DB_URL: mongodb://mongodb:27017
  ACCOUNTS_URL: https://account.${SERVER_ADDRESS}
  STATS_URL: https://stats.${SERVER_ADDRESS}

services:

  # === Datenbank, Storage und Such-Services ===
  mongodb:
    image: mongo:7-jammy
    restart: unless-stopped
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - db:/data/db
    networks:
      - coolify

  minio:
    image: minio/minio
    restart: unless-stopped
    command: server /data --address ":9000" --console-address ":9001"
    volumes:
      - files:/data
    networks:
      - coolify

  elastic:
    image: elasticsearch:7.14.2
    restart: unless-stopped
    command: |
      /bin/sh -c "\
        ./bin/elasticsearch-plugin list | grep -q ingest-attachment || \
        yes | ./bin/elasticsearch-plugin install --silent ingest-attachment; \
        /usr/local/bin/docker-entrypoint.sh eswrapper"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8082
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    networks:
      - coolify

  # === Core-Services mit Subdomain-Routing ===
  rekoni:
    image: hardcoreeng/rekoni-service:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
    networks:
      - coolify
    labels:
      - traefik.enable=true
      # HTTP → HTTPS
      - traefik.http.routers.rekoni-http.entrypoints=web
      - traefik.http.routers.rekoni-http.rule=Host(`rekoni.${SERVER_ADDRESS}`)
      - traefik.http.routers.rekoni-http.middlewares=redirect-to-https
      # HTTPS
      - traefik.http.routers.rekoni-https.entrypoints=websecure
      - traefik.http.routers.rekoni-https.rule=Host(`rekoni.${SERVER_ADDRESS}`)
      - traefik.http.routers.rekoni-https.tls=true
      - traefik.http.routers.rekoni-https.tls.certresolver=letsencrypt
      - traefik.http.services.rekoni.loadbalancer.server.port=4004
      # Middleware
      - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https

  transactor:
    image: hardcoreeng/transactor:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      SERVER_PORT: 3333
      SERVER_CURSOR_MAXTIMEMS: 30000
      FRONT_URL: http://front:8080
      FULLTEXT_URL: http://fulltext:4700
      LAST_NAME_FIRST: true
    networks:
      - coolify
    labels:
      - traefik.enable=true

      # WebSocket → Upgrade auf wss://transactor.work.illunade.de/ws/transactor/<token>
      - traefik.http.routers.transactor-ws.entrypoints=websecure
      - traefik.http.routers.transactor-ws.rule=Host(`transactor.${SERVER_ADDRESS}`) && PathPrefix(`/ws/transactor`)
      - traefik.http.routers.transactor-ws.tls=true
      - traefik.http.routers.transactor-ws.tls.certresolver=letsencrypt
      - traefik.http.services.transactor-ws.loadbalancer.server.port=3333

      # Regex-Strip-Middleware für alle Pfade unter /ws/transactor
      - traefik.http.middlewares.strip-ws-tx-stripper.stripprefixregex.regex=^/ws/transactor
      - traefik.http.routers.transactor-ws.middlewares=strip-ws-tx-stripper

      # REST-API HTTP → HTTPS Redirect
      - traefik.http.routers.transactor-http.entrypoints=web
      - traefik.http.routers.transactor-http.rule=Host(`transactor.${SERVER_ADDRESS}`) && PathPrefix(`/transactor`)
      - traefik.http.routers.transactor-http.middlewares=redirect-to-https

      # REST-API HTTPS
      - traefik.http.routers.transactor-https.entrypoints=websecure
      - traefik.http.routers.transactor-https.rule=Host(`transactor.${SERVER_ADDRESS}`) && PathPrefix(`/transactor`)
      - traefik.http.routers.transactor-https.tls=true
      - traefik.http.routers.transactor-https.tls.certresolver=letsencrypt
      - traefik.http.services.transactor.loadbalancer.server.port=3333

      # Strip-Prefix für REST-API
      - traefik.http.middlewares.strip-http-tx.stripprefix.prefixes=/transactor
      - traefik.http.routers.transactor-https.middlewares=strip-http-tx

      # Globale Redirect-Middleware
      - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https


  collaborator:
    image: hardcoreeng/collaborator:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      COLLABORATOR_PORT: 3078
    networks:
      - coolify
    labels:
      - traefik.enable=true
      # WebSocket
      - traefik.http.routers.collaborator-ws.entrypoints=websecure
      - traefik.http.routers.collaborator-ws.rule=Host(`collaborator.${SERVER_ADDRESS}`) && PathPrefix(`/ws/collaborator`)
      - traefik.http.routers.collaborator-ws.tls=true
      - traefik.http.routers.collaborator-ws.tls.certresolver=letsencrypt
      - traefik.http.services.collaborator-ws.loadbalancer.server.port=3078
      - traefik.http.routers.collaborator-ws.middlewares=strip-ws-coll
      - traefik.http.middlewares.strip-ws-coll.stripprefix.prefixes=/ws/collaborator
      # HTTP → HTTPS
      - traefik.http.routers.collaborator-http.entrypoints=web
      - traefik.http.routers.collaborator-http.rule=Host(`collaborator.${SERVER_ADDRESS}`) && PathPrefix(`/collaborator`)
      - traefik.http.routers.collaborator-http.middlewares=redirect-to-https
      # HTTPS
      - traefik.http.routers.collaborator-https.entrypoints=websecure
      - traefik.http.routers.collaborator-https.rule=Host(`collaborator.${SERVER_ADDRESS}`) && PathPrefix(`/collaborator`)
      - traefik.http.routers.collaborator-https.tls=true
      - traefik.http.routers.collaborator-https.tls.certresolver=letsencrypt
      - traefik.http.services.collaborator.loadbalancer.server.port=3078
      - traefik.http.routers.collaborator-https.middlewares=strip-http-coll
      - traefik.http.middlewares.strip-http-coll.stripprefix.prefixes=/collaborator
      - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https

  account:
    image: hardcoreeng/account:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      SERVER_PORT: 3000
      TRANSACTOR_URL: ws://transactor:3333;wss://transactor.${SERVER_ADDRESS}/ws/transactor
      FRONT_URL: http://front:8080
      MODEL_ENABLED: "*"
      ACCOUNT_PORT: 3000
    networks:
      - coolify
    labels:
      - traefik.enable=true
      # HTTP → HTTPS
      - traefik.http.routers.account-http.entrypoints=web
      - traefik.http.routers.account-http.rule=Host(`account.${SERVER_ADDRESS}`)
      - traefik.http.routers.account-http.middlewares=redirect-to-https
      # HTTPS
      - traefik.http.routers.account-https.entrypoints=websecure
      - traefik.http.routers.account-https.rule=Host(`account.${SERVER_ADDRESS}`)
      - traefik.http.routers.account-https.tls=true
      - traefik.http.routers.account-https.tls.certresolver=letsencrypt
      - traefik.http.services.account.loadbalancer.server.port=3000
      - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https

  workspace:
    image: hardcoreeng/workspace:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      TRANSACTOR_URL: ws://transactor:3333;wss://transactor.${SERVER_ADDRESS}/ws/transactor
      MODEL_ENABLED: "*"
    networks:
      - coolify

  front:
    image: hardcoreeng/front:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      SERVER_PORT: 8080
      ACCOUNTS_URL: https://account.${SERVER_ADDRESS}
      REKONI_URL: https://rekoni.${SERVER_ADDRESS}
      CALENDAR_URL: https://calendar.${SERVER_ADDRESS}
      GMAIL_URL: https://gmail.${SERVER_ADDRESS}
      TELEGRAM_URL: https://telegram.${SERVER_ADDRESS}
      STATS_URL: https://stats.${SERVER_ADDRESS}
      UPLOAD_URL: /files
      ELASTIC_URL: http://elastic:9200
      COLLABORATOR_URL: wss://collaborator.${SERVER_ADDRESS}/ws/collaborator
      TITLE: Huly Self Host
      DEFAULT_LANGUAGE: en
      LAST_NAME_FIRST: true
      DESKTOP_UPDATES_CHANNEL: selfhost
    networks:
      - coolify
    labels:
      - traefik.enable=true
      # HTTP → HTTPS
      - traefik.http.routers.front-http.entrypoints=web
      - traefik.http.routers.front-http.rule=Host(`${SERVER_ADDRESS}`)
      - traefik.http.routers.front-http.middlewares=redirect-to-https
      # HTTPS
      - traefik.http.routers.front-https.entrypoints=websecure
      - traefik.http.routers.front-https.rule=Host(`${SERVER_ADDRESS}`)
      - traefik.http.routers.front-https.tls=true
      - traefik.http.routers.front-https.tls.certresolver=letsencrypt
      - traefik.http.services.front.loadbalancer.server.port=8080
      - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https

  fulltext:
    image: hardcoreeng/fulltext:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      FULLTEXT_DB_URL: http://elastic:9200
      ELASTIC_INDEX_NAME: huly_storage_index
      REKONI_URL: http://rekoni:4004
    networks:
      - coolify

  stats:
    image: hardcoreeng/stats:${HULY_VERSION}
    restart: unless-stopped
    environment:
      <<: *common-env
      PORT: 4900
    networks:
      - coolify
    labels:
      - traefik.enable=true
      # HTTP → HTTPS
      - traefik.http.routers.stats-http.entrypoints=web
      - traefik.http.routers.stats-http.rule=Host(`stats.${SERVER_ADDRESS}`)
      - traefik.http.routers.stats-http.middlewares=redirect-to-https
      # HTTPS
      - traefik.http.routers.stats-https.entrypoints=websecure
      - traefik.http.routers.stats-https.rule=Host(`stats.${SERVER_ADDRESS}`)
      - traefik.http.routers.stats-https.tls=true
      - traefik.http.routers.stats-https.tls.certresolver=letsencrypt
      - traefik.http.services.stats.loadbalancer.server.port=4900
      - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https
networks:
  internal-services:
    name: internal-services
  coolify:
    external: true
volumes:
  db:
  elastic:
  files:
